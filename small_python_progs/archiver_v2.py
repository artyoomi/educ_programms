import os
import time 
import zipfile

# инструкция по использованию программы и основные особенности
print("1. Архив с резервными копиями файлов создаётся в той же папке, где и находится сама программа.")
print("2. Для копирования файла или папки, который необходимо скопировать, указвайте полный путь к папке или файлу.")
print("3. Для завершения программы вместо пути к папке введите X(большая буква 'икс' в английской ракладке).")
print("4. В случае моментального выхода из программы, без ввода директорий архив не будет создан.")
print("5. Если копируемая папка имеет большой объём, то придётся немного подождать, иначе файл будет повреждён")
print("6. Архив принимает имя текущего времени и даты")
print("7. Если вы хотите задать пароль создаваемому архиву, введите в поле ввода 'Pass'")
print()
print("P.S. Пустые папки не будут скопированы, это всё равно бесполезно xD")
print("-------------------------------------------------------------------")

# получение имени папки(время создания):
time_s = time.time() # получение времени с начала эпохи в секундах
time_y = time.ctime(time_s) # преобразование секунд в нормальное время

# замена недопустимых символов
time_y = time_y.replace(" ", "_") 
time_y = time_y.replace(":", ".") 

# создание папки
directory = os.getcwd() # получаем местоположение программы
dir_res = os.path.join(os.path.abspath(directory), time_y + ".zip") #создание правильного пути к папке с программой


# сбор имён требуемых для архивации файлов

i = True
num = 1 # нумерация директорий

dir_list = [] # объявление списка для путей архивирования

while i == True: # сбор списка путей
	dir_el = input("Введите директорию к копированию "+ str(num) + ": ")

	if os.path.isdir(dir_el) == True:
		if not dir_el in dir_list: # проверка, нет ли в списке этой папки
			num+=1
			dir_list.append(dir_el)

		else: 
			print("Эта папка уже есть в архиве!")

	elif dir_el == "X":  # конец сбора

		if dir_list == []:
			print("Не было скопировано ни одного файла и архив не был создан!")
		break

	else:  # сообщение в случае неправильного ввода файла или директории
		print("Такой директории не существует")

if dir_list != []:
	arch = zipfile.ZipFile(dir_res, "w", compression=zipfile.ZIP_DEFLATED, allowZip64=True) # создание архива

	print("Копирование...")
	for element in dir_list:
		for root, dirs, files in os.walk(element):
			for file in files:
   				arch.write(os.path.join(root,file))

	arch.close()
	print("Файлы были успешно скопированы!")

close = str(input("Нажмите любую кнопку для завершения...")) # ввод для закрытия программы